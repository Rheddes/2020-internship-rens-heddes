version: '3'
services:
    repo_finder:
        build:
            context: .
            dockerfile: docker/repo_finder/Dockerfile
        image: rheddes/repo_finder
        environment:
            API_KEY: ${API_KEY}
        networks:
          - default
    repo_scanner:
        build:
            context: .
            dockerfile: docker/repo_scanner/Dockerfile
        image: rheddes/repo_scanner
        environment:
            API_KEY: ${API_KEY}
        volumes:
            - ./docker/volumes/out:/home/runner/out
#            - ./docker/volumes/repos:/home/runner/repos
        networks:
            - default
    mysql:
        image: 'library/mysql:8.0'
        ports:
            - '127.0.0.1:33061:3306'
        environment:
            MYSQL_DATABASE: vulnerability-history
            MYSQL_USER: vulnerability-history
            MYSQL_PASSWORD: secret
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        command: mysqld --sql_mode=""
        volumes:
            - ./docker/mysql:/docker-entrypoint-initdb.d/:ro
            - 'updatesdb:/var/lib/mysql'
        networks:
            - default
    vulnerabilitydb:
        image: 'stefanneuhaus/dependencycheck-central-mysql'
        ports:
            - '127.0.0.1:33069:3306'
        volumes:
            - 'vulnerabilitydb:/var/lib/mysql'
    vulnerability_finder:
        build:
            context: .
            dockerfile: docker/vulnerability_finder/Dockerfile
        image: rheddes/vulnerability_finder
        restart: always
        networks:
            - default

networks:
    default:
        driver: bridge
volumes:
    updatesdb:
        driver: local
    vulnerabilitydb:
        driver: local

